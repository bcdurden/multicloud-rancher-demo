#!/bin/bash
# Carbide Registry
SOURCE_REGISTRY=rgcrprod.azurecr.us
SOURCE_REGISTRY_USER=$1
SOURCE_REGISTRY_PASS=$2

# Working directories & TAR
DEST_DIRECTORY=/tmp/rke2-images
DEST_TAR=/tmp/rke2-images.tar.gz  # Change this to the location you want for your resulting TAR 

# RKE2 Version
RKE2_RELEASE=v1.24.3+rke2r1

if [[ -d "$DEST_DIRECTORY" ]]; then
    echo "ERROR: Directory '$DEST_DIRECTORY' exists."
    echo "Change or delete it before running."
    exit 1
fi

if [[ -d "$DEST_TAR" ]]; then
    echo "ERROR: Directory '$DEST_TAR' exists."
    echo "Change or delete it before running."
    exit 1
fi

cosign login -u $SOURCE_REGISTRY_USER -p $SOURCE_REGISTRY_PASS $SOURCE_REGISTRY
mkdir -p "$DEST_DIRECTORY"

RKE2_IMAGES=$(curl --silent -L https://github.com/rancher/rke2/releases/download/$RKE2_RELEASE/rke2-images-all.linux-amd64.txt)
for image in $RKE2_IMAGES; do
    source_image=$(echo $image | sed "s|docker.io|$SOURCE_REGISTRY|g")
    dest_image=$(echo $image | sed "s|docker.io|TARGET_REGISTRY|g")
    
    # Create manifest to use during load
    img_dir=$(mktemp -d $DEST_DIRECTORY/rke2-image.XXXXXXX)
    img_id_num=${img_dir: -18}
    echo "$img_id_num|$dest_image" >> $DEST_DIRECTORY/manifest.txt
    
    # Save image locally
    printf "Exporting $source_image\n"
    cosign save --dir "$DEST_DIRECTORY/$img_id_num" $source_image
    if [ $? != 0 ]; then
      cosign save --dir "$DEST_DIRECTORY/$img_id_num" $source_image
    fi
done

# Compress directory
tar zcf "$DEST_TAR" -C "$DEST_DIRECTORY" .

# Clean up working directory
rm -rf $DEST_DIRECTORY